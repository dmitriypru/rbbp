version: "3.7"

services:
  setup:
    build:
      context: .
      dockerfile: docker_cfg/setup/Dockerfile

  redis:
    image: redis:5.0.5-alpine
    restart: on-failure
    ports:
      - '6379:6379'
    sysctls:
      net.core.somaxconn: 1024

  postgres:
    image: postgres:11
    volumes:
      - ./docker_volumes/postgres/data/:/var/lib/postgresql/
    env_file:
      - ./docker_cfg/postgres/postgres_env.env
    restart: on-failure
    ports:
      - '5432:5432'
    depends_on:
      - setup

  celery:
    build:
      context: .
      dockerfile: docker_cfg/celery/Dockerfile
    links:
      - "postgres"
    volumes:
      - ./checkers/:/checkers/
    restart: on-failure

  celerybeat:
    build:
      context: .
      dockerfile: docker_cfg/celerybeat/Dockerfile
    links:
      - "postgres"
    restart: on-failure

  flower:
    build:
      context: .
      dockerfile: docker_cfg/flower/Dockerfile
    links:
      - "postgres"
    env_file:
      - docker_cfg/flower/flower_env.env
    restart: on-failure

  api:
    build:
      context: .
      dockerfile: docker_cfg/api/Dockerfile
    ports:
      - 8888:8888
    links:
      - "postgres"
    restart: on-failure

  nginx:
    build:
      context: .
      dockerfile: docker_cfg/nginx/Dockerfile
#    volumes:
#      - react_build:/react_build
    ports:
      - 80:80
    restart: on-failure
    links:
      - flower
      - api